# Generated by Django 4.2.3 on 2023-11-06 19:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, verbose_name='Наименование добывающего общества')),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, verbose_name='Наименование месторождения')),
                ('do', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='infr_app.do', verbose_name='Добывающее общество')),
            ],
        ),
        migrations.CreateModel(
            name='FloodingObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('obj_type', models.CharField(choices=[('kns', 'КНС')], max_length=15, verbose_name='Тип объекта закачки')),
                ('wat_pmp_pwr', models.FloatField(blank=True, null=True, verbose_name='Мощность по закачке воды, м3/сут')),
                ('wat_src_dbt', models.FloatField(blank=True, null=True, verbose_name='Мощность водозаборов, м3/сут')),
                ('field', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='infr_app.field', verbose_name='Месторождение')),
            ],
            options={
                'verbose_name': 'Кустовая насосная станция',
                'verbose_name_plural': 'Кустовые насосные станции',
            },
        ),
        migrations.CreateModel(
            name='Pad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, verbose_name='Наименование кустовой площадки')),
                ('oil_fact', models.FloatField(null=True, verbose_name='Фактическая добыча нефти')),
                ('liq_fact', models.FloatField(null=True, verbose_name='Фактическая добыча жидкости')),
                ('gas_fact', models.FloatField(null=True, verbose_name='Фактическая добыча попутного газа')),
                ('fld_fact', models.FloatField(null=True, verbose_name='Фактическая закачка воды')),
                ('field', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='infr_app.field', verbose_name='Месторождение')),
            ],
        ),
        migrations.CreateModel(
            name='Well',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, verbose_name='Наименование скважины')),
                ('dest', models.CharField(choices=[('prod', 'добывающая'), ('inj', 'нагнетательная')], max_length=25, verbose_name='Назначение скважины')),
                ('oil_fact', models.FloatField(blank=True, null=True, verbose_name='Фактическая добыча нефти, м3/сут')),
                ('liq_fact', models.FloatField(blank=True, null=True, verbose_name='Фактическая добыча жидкости, м3/сут')),
                ('gas_fact', models.FloatField(null=True, verbose_name='Фактическая добыча попутного газа')),
                ('fld_fact', models.FloatField(blank=True, null=True, verbose_name='Фактическая закачка воды, м3/сут')),
                ('pad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='infr_app.pad', verbose_name='Кустовая площадка')),
            ],
            options={
                'verbose_name': 'Скважины и фактические уровни добычи или закачки на них',
            },
        ),
        migrations.CreateModel(
            name='WellPadConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_pad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.pad', verbose_name='Идентификатор куста')),
                ('id_well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.well', verbose_name='Идентификатор скважины')),
            ],
        ),
        migrations.CreateModel(
            name='SeparationObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('obj_type', models.CharField(choices=[('dns', 'ДНС'), ('upsv', 'УПСВ'), ('ptvo', 'ПТВО'), ('upn', 'УПН'), ('cppn', 'ЦППН')], max_length=15)),
                ('liq_sep_pwr', models.FloatField(blank=True, null=True, verbose_name='Мощность по подготовке жидкости, м3/сут')),
                ('oil_sep_pwr', models.FloatField(blank=True, null=True, verbose_name='Мощность по подготовке нефти, м3/сут')),
                ('wat_sep_pwr', models.FloatField(blank=True, null=True, verbose_name='Мощность по подготовке воды, м3/сут')),
                ('liq_pmp_pwr', models.FloatField(blank=True, null=True, verbose_name='Мощность по перекачке жидкости, м3/сут')),
                ('oil_pmp_pwr', models.FloatField(blank=True, null=True, verbose_name='Мощность по перекачке нефти, м3/сут')),
                ('wat_pmp_pwr', models.FloatField(blank=True, null=True, verbose_name='Мощность по перекачке воды, м3/сут')),
                ('wcut', models.FloatField(null=True, verbose_name='Остаточная обводненность продукции')),
                ('field', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='infr_app.field', verbose_name='Месторождение')),
            ],
            options={
                'verbose_name': 'Дожимная насосная станция',
                'verbose_name_plural': 'Дожимные насосные станции',
            },
        ),
        migrations.CreateModel(
            name='Prognose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liquid', models.FloatField(blank=True, null=True, verbose_name='Добыча жидкости')),
                ('oil', models.FloatField(blank=True, null=True, verbose_name='Добыча нефти')),
                ('gas', models.FloatField(blank=True, null=True, verbose_name='Добыча газа')),
                ('flood', models.FloatField(blank=True, null=True, verbose_name='Закачка воды')),
                ('date_pt', models.DateField(verbose_name='Дата')),
                ('id_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.field')),
            ],
            options={
                'verbose_name': 'Прогноз добычи на месторождении',
                'verbose_name_plural': 'Прогнозы добычи на месторождении',
            },
        ),
        migrations.CreateModel(
            name='PadKNSConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_pt', models.DateField(verbose_name='Дата, когда выполняется указанное соответствие куста объекту')),
                ('id_kns', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='infr_app.floodingobject', verbose_name='Объект ппд (закачки), к которому подключена кустовая площадка')),
                ('id_pad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.pad', verbose_name='Идентификатор кустовой площадки')),
            ],
        ),
        migrations.CreateModel(
            name='PadFieldConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.field', verbose_name='Идентификатор м-я')),
                ('id_pad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.pad', verbose_name='Идентификатор куста')),
            ],
        ),
        migrations.CreateModel(
            name='PadDNSConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_pt', models.DateField(verbose_name='Дата, когда выполняется указанное соответствие куста объекту')),
                ('id_dns', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='infr_app.separationobject', verbose_name='Объект сбора, к которому подключена кустовая площадка')),
                ('id_pad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.pad', verbose_name='Идентификатор кустовой площадки')),
            ],
        ),
        migrations.CreateModel(
            name='KNSFieldConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.field', verbose_name='Идентификатор м-я')),
                ('id_kns', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.floodingobject', verbose_name='Идентификатор КНС')),
            ],
        ),
        migrations.CreateModel(
            name='KNSDNSConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(verbose_name='Приоритет источника воды для данного потребителя')),
                ('date_pt', models.DateField(verbose_name='Дата, когда выполняется указанное соответствие объектов')),
                ('id_dns', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.separationobject', verbose_name='Идентификатор КНС')),
                ('id_kns', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.field', verbose_name='Идентификатор м-я')),
            ],
        ),
        migrations.CreateModel(
            name='DNSKNSConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(verbose_name='Приоритет потребителя воды для данного источника')),
                ('date_pt', models.DateField(verbose_name='Дата, когда выполняется указанное соответствие объектов')),
                ('id_dns', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.floodingobject', verbose_name='Идентификатор КНС')),
                ('id_kns', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.field', verbose_name='Идентификатор м-я')),
            ],
        ),
        migrations.CreateModel(
            name='DNSFieldConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_dns', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.separationobject', verbose_name='Идентификатор ДНС')),
                ('id_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infr_app.field', verbose_name='Идентификатор м-я')),
            ],
        ),
    ]
